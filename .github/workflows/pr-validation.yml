name: CI
on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  validate:
    name: validate - ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    container: ghcr.io/kedacore/keda-tools:1.23.3
    strategy:
      matrix:
        include:
          - runner: ARM64
            name: arm64
          - runner: ubuntu-latest
            name: amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 1

      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y jq python3-yaml

      - name: Register workspace path
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Check go version
        run: go version

      - name: Set Go paths
        id: go-paths
        run: |
          echo "mod_cache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
          echo "build_cache=$(go env GOCACHE)" >> $GITHUB_OUTPUT

      - name: Go modules cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ${{ steps.go-paths.outputs.mod_cache }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Go build cache
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ${{ steps.go-paths.outputs.build_cache }}
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}

      - name: Go modules sync
        run: go mod tidy -compat=1.23

      - name: Verify generated Clientset is up to date
        run: make clientset-verify

      - name: Verify generated Manifests are up to date
        run: make verify-manifests

      - name: Build
        run: make build

      - name: Test
        run: make test

      - name: Create test Summary
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2.4
        with:
          paths: "report.xml"
        if: always()

  validate-dockerfiles:
    name: validate-dockerfiles - ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    container: ghcr.io/kedacore/keda-tools:1.23.3
    strategy:
      matrix:
        include:
          - runner: ARM64
            name: arm64
          - runner: ubuntu-latest
            name: amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 1

      - name: Register workspace path
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            dockerfiles:
              - 'Dockerfile*'

      - name: Build images
        if: steps.filter.outputs.dockerfiles == 'true'
        run: make docker-build

  validate-dev-container:
    name: Validate dev-container - ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    container: ghcr.io/kedacore/keda-tools:1.23.3
    strategy:
      matrix:
        include:
          - runner: ARM64
            name: arm64
          - runner: ubuntu-latest
            name: amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Register workspace path
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            devcontainer:
              - '.devcontainer/Dockerfile'

      - name: Build tools
        if: steps.filter.outputs.devcontainer == 'true'
        run: make docker-build-dev-containers

  statics:
    name: Static Checks
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: 3.x
      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
        with:
          go-version: "1.23"
      - name: Get golangci
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0
      - uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # v3.0.0

  trivy-scan:
    uses: kedacore/keda/.github/workflows/template-trivy-scan.yml@main
    with:
      runs-on: ubuntu-latest
      scan-type: "fs"
      format: "table"
      output: ""
      exit-code: 1
      publish: false
